/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Vista;

import Modelo.Estudiantes;
import Modelo.Profesores;
import Modelo.Categorias;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Conta
 */
public class Cuaderno_De_Tiempo extends javax.swing.JInternalFrame {

    /** Creates new form Cuaderno_De_Tiempo */
    public Cuaderno_De_Tiempo() {
        try {
            initComponents();
            Estudiantes es = new Estudiantes();
            Profesores prof = new Profesores();
            Categorias cat = new Categorias();
            DefaultComboBoxModel modeloEstudiantes = new DefaultComboBoxModel(es.MostrarEstudiantes());
            estudianteCombox.setModel(modeloEstudiantes);
            
            DefaultComboBoxModel modeloProfesores = new DefaultComboBoxModel(prof.MostrarProfesores());
            profesorCombox.setModel(modeloProfesores);
            
            DefaultComboBoxModel modeloCategorias = new DefaultComboBoxModel(cat.MostrarCategorias());
            categoriasCombox.setModel(modeloCategorias);
            
        } catch (SQLException ex) {
            Logger.getLogger(Cuaderno_De_Tiempo.class.getName()).log(Level.SEVERE, null, ex);
        }
         t = new Timer(10, acciones);
    }
    
    void mostrardatos(String valor){
    DefaultTableModel modelo= new DefaultTableModel();
    modelo.addColumn("ID");
    modelo.addColumn("Actividad");
    modelo.addColumn("Categoría");
    modelo.addColumn("Materia");
    tbActividades.setModel(modelo);
    String sql="";
    if(valor.equals(""))
    {
        sql="SELECT * FROM actividades";
    }
    else{
        sql="SELECT * FROM actividades WHERE id='"+valor+"'";
    }
 
    String []datos = new String [4];
        try {
            Controlador.Db con = new Controlador.Db();
            Connection cn = con.conexion();
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                modelo.addRow(datos);
            }
            tbActividades.setModel(modelo);
        } catch (SQLException ex) {
            Logger.getLogger(Cuaderno_De_Tiempo.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private Timer t;
    private int h,m,s,cs;
    private ActionListener acciones = new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent ae) {
               cs++;
                if (cs==100) {
                    cs=0;
                    ++s;
                }
                if (s==60) {
                    s=0;
                    ++m;
                   
                }
                if (m==60) {
                    m=0;
                    ++h;
                    
                }
                actualizarlabel();
            }
    
    };
    
    private void actualizarlabel(){
        /**
         * 
         * si h = cantidad de horas menor o igual 9
         * h<=9?"0":""
         * se remplazaria por cero sino se remplazara por una cadena vacia
         * agrega un cero cuando el valor sea menor a 9
         * 
         */
        String tiempo=(h<=9?"0":"")+h+":"+(m<=9?"0":"")+m+":"+(s<=9?"0":"")+s+":"+(cs<=9?"0":"")+cs;
        etiquetaTiempo.setText(tiempo);
        
        
        
        etiquetaT2.setText(tiempo);
    
    
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        fechatxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        materiatxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbActividades = new javax.swing.JTable();
        estudianteCombox = new javax.swing.JComboBox<>();
        profesorCombox = new javax.swing.JComboBox<>();
        agregarbtn = new javax.swing.JButton();
        cerrarbtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        categoriasCombox = new javax.swing.JComboBox<>();
        generarFechabtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        actividadtxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        etiquetaTiempo = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnStar = new javax.swing.JButton();
        etiquetaT2 = new javax.swing.JLabel();
        btnPausar = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();

        setTitle("Cuaderno de Actividades");

        jButton1.setText("Guardar");

        jLabel1.setText("Estudiante");

        jLabel2.setText("Fecha");

        jLabel3.setText("Profesor");

        jLabel4.setText("Materia");

        tbActividades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Actividad", "Categoria", "Materia"
            }
        ));
        jScrollPane1.setViewportView(tbActividades);

        estudianteCombox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione..." }));
        estudianteCombox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                estudianteComboxItemStateChanged(evt);
            }
        });
        estudianteCombox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estudianteComboxActionPerformed(evt);
            }
        });

        profesorCombox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione..." }));
        profesorCombox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                profesorComboxItemStateChanged(evt);
            }
        });

        agregarbtn.setText("Agregar");
        agregarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarbtnActionPerformed(evt);
            }
        });

        cerrarbtn.setText("Cerrar");
        cerrarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarbtnActionPerformed(evt);
            }
        });

        jLabel5.setText("Categorías");

        categoriasCombox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione..." }));
        categoriasCombox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                categoriasComboxItemStateChanged(evt);
            }
        });

        generarFechabtn.setText("Generar Fecha");
        generarFechabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarFechabtnActionPerformed(evt);
            }
        });

        jLabel6.setText("Actividad");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("Tiempo de Actividad");

        etiquetaTiempo.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        etiquetaTiempo.setText("00:00:00:00");

        jLabel8.setText("tiempo de imterrupcion");

        btnStar.setText("Empezar");
        btnStar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStarActionPerformed(evt);
            }
        });

        etiquetaT2.setText("00:00:00:00");

        btnPausar.setText("Pausar");
        btnPausar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPausarActionPerformed(evt);
            }
        });

        btnStop.setText("Terminar");
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(fechatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(generarFechabtn)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(estudianteCombox, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(agregarbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(profesorCombox, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(actividadtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(categoriasCombox, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(materiatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(80, 80, 80)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(etiquetaT2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(329, 329, 329)
                            .addComponent(etiquetaTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(143, 143, 143))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(btnStar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnPausar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnStop)
                            .addGap(66, 66, 66)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 679, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(534, 534, 534)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cerrarbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fechatxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generarFechabtn)
                    .addComponent(estudianteCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profesorCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(categoriasCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(materiatxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(actividadtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(agregarbtn)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(3, 3, 3)
                        .addComponent(etiquetaT2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etiquetaTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStar)
                    .addComponent(btnPausar)
                    .addComponent(btnStop))
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cerrarbtn)
                    .addComponent(jButton1))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void estudianteComboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estudianteComboxActionPerformed
        
    }//GEN-LAST:event_estudianteComboxActionPerformed

    private void estudianteComboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_estudianteComboxItemStateChanged
        
    }//GEN-LAST:event_estudianteComboxItemStateChanged

    private void profesorComboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_profesorComboxItemStateChanged
        
    }//GEN-LAST:event_profesorComboxItemStateChanged

    private void cerrarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarbtnActionPerformed
       this.dispose();
    }//GEN-LAST:event_cerrarbtnActionPerformed

    private void categoriasComboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_categoriasComboxItemStateChanged

    }//GEN-LAST:event_categoriasComboxItemStateChanged

    private void agregarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarbtnActionPerformed
      try
        {  Controlador.Db con = new Controlador.Db();
            Connection cn = con.conexion(); 
        
            try 
            { 
               PreparedStatement pst = cn.prepareStatement("INSERT INTO actividades(nombre, fecha,materia)"
                        + "                                  VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)");
                pst.setString(1, actividadtxt.getText());
                pst.setString(2, fechatxt.getText());
                pst.setString(11, materiatxt.getText());
                pst.executeUpdate();
            } catch (Exception e) 
            {
                System.out.print(e.getMessage());
            }
        }catch(SQLException ex)
            {
                    Logger.getLogger(Vista_Estudiante.class.getName()).log(Level.SEVERE,null,ex);
            }
    }//GEN-LAST:event_agregarbtnActionPerformed

    private void generarFechabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarFechabtnActionPerformed
        //Aquí se generará la fecha
        Calendar calend;
        calend = Calendar.getInstance();//Se extrae la fecha del momento
         /*
            *Se declara las variables de dia, mes, año.
            *En el mes se declara en uno porque la pc va de 0 a 11.
         */
        int dia =calend.get(Calendar.DATE), mes = 1+ (calend.get(Calendar.MONTH)), anio = calend.get(Calendar.YEAR);
        fechatxt.setText(dia+"-"+mes+"-"+anio);//Se graba la fecha en el label
    }//GEN-LAST:event_generarFechabtnActionPerformed

    private void btnStarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStarActionPerformed
        t.start();
        btnStar.setEnabled(false);
        btnStar.setText("Reanudar");
        btnPausar.setEnabled(true);
        btnStop.setEnabled(true);

    }//GEN-LAST:event_btnStarActionPerformed

    private void btnPausarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPausarActionPerformed
        t.stop();
        btnStar.setEnabled(true);
        btnPausar.setEnabled(false);
    }//GEN-LAST:event_btnPausarActionPerformed

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        if (t.isRunning()) {
            t.stop();
            btnStar.setEnabled(true);

        }
        btnStar.setText("iniciar");
        btnPausar.setEnabled(false);
        btnStop.setEnabled(false);
        h=0; m=0; s=0; cs=0;

        actualizarlabel();
    }//GEN-LAST:event_btnStopActionPerformed

      
       
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField actividadtxt;
    private javax.swing.JButton agregarbtn;
    private javax.swing.JButton btnPausar;
    private javax.swing.JButton btnStar;
    private javax.swing.JButton btnStop;
    private javax.swing.JComboBox<String> categoriasCombox;
    private javax.swing.JButton cerrarbtn;
    private javax.swing.JComboBox<String> estudianteCombox;
    private javax.swing.JLabel etiquetaT2;
    private javax.swing.JLabel etiquetaTiempo;
    private javax.swing.JTextField fechatxt;
    private javax.swing.JButton generarFechabtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField materiatxt;
    private javax.swing.JComboBox<String> profesorCombox;
    private javax.swing.JTable tbActividades;
    // End of variables declaration//GEN-END:variables

    /* private void cargarEstudiantes(int Id)
    {   
        try
        {
            Controlador.Db con = new Controlador.Db();
            Connection cn = con.conexion();
            
            try
            {
                Statement st = cn.createStatement();
                ResultSet rs = st.executeQuery("SELECT * FROM estudiantes WHERE id ="+Id);
                estudianteCombox.removeAllItems();
                
                while(rs.next())
                {
                    estudianteCombox.addItem(rs.getString (2) + rs.getString(3) + rs.getString(4));
               
                }
            }
            
            catch(SQLException e)
            {
                Logger.getLogger(Cuaderno_De_Tiempo.class.getName()).log(Level.SEVERE,null,e);
            }
        }
        
        catch(SQLException ex)
                {
                    Logger.getLogger(Cuaderno_De_Tiempo.class.getName()).log(Level.SEVERE,null,ex);
                }
    }
     
       private void cargarProfesores(int Id)
    {   
        try
        {
            Controlador.Db con = new Controlador.Db();
            Connection cn = con.conexion();
            
            try
            {
                Statement st = cn.createStatement();
                ResultSet rs = st.executeQuery("SELECT * FROM profesores WHERE id ="+Id);
                profesorCombox.removeAllItems();
                
                while(rs.next())
                {
                    profesorCombox.addItem(rs.getString (5));
                }
            }
            
            catch(SQLException e)
            {
                Logger.getLogger(Cuaderno_De_Tiempo.class.getName()).log(Level.SEVERE,null,e);
            }
        }
        
        catch(SQLException ex)
                {
                    Logger.getLogger(Cuaderno_De_Tiempo.class.getName()).log(Level.SEVERE,null,ex);
                }
    }
    
        private void cargarCategorias(int Id)
    {   
        try
        {
            Controlador.Db con = new Controlador.Db();
            Connection cn = con.conexion();
            
            try
            {
                Statement st = cn.createStatement();
                ResultSet rs = st.executeQuery("SELECT * FROM categorias WHERE id ="+Id);
                categoriasCombox.removeAllItems();
                
                while(rs.next())
                {
                    categoriasCombox.addItem(rs.getString (2));
                }
            }
            
            catch(SQLException e)
            {
                Logger.getLogger(Cuaderno_De_Tiempo.class.getName()).log(Level.SEVERE,null,e);
            }
        }
        
        catch(SQLException ex)
                {
                    Logger.getLogger(Cuaderno_De_Tiempo.class.getName()).log(Level.SEVERE,null,ex);
                }
    }*/
}
